#include <stdio.h>

struct Process {
    int pid;           // Process ID
    int burstTime;     // Burst Time (Execution Time)
    int waitingTime;   // Waiting Time
    int turnAroundTime;// Turn Around Time
};

void calculateWaitingTime(struct Process proc[], int n) {
    proc[0].waitingTime = 0; // First process has 0 waiting time

    for (int i = 1; i < n; i++) {
        proc[i].waitingTime = proc[i - 1].waitingTime + proc[i - 1].burstTime;
    }
}

void calculateTurnAroundTime(struct Process proc[], int n) {
    for (int i = 0; i < n; i++) {
        proc[i].turnAroundTime = proc[i].waitingTime + proc[i].burstTime;
    }
}

void sortProcessesByBurstTime(struct Process proc[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (proc[i].burstTime > proc[j].burstTime) {
                struct Process temp = proc[i];
                proc[i] = proc[j];
                proc[j] = temp;
            }
        }
    }
}

void calculateAverageTimes(struct Process proc[], int n) {
    int totalWaitingTime = 0, totalTurnAroundTime = 0;

    for (int i = 0; i < n; i++) {
        totalWaitingTime += proc[i].waitingTime;
        totalTurnAroundTime += proc[i].turnAroundTime;
    }

    printf("Average Waiting Time = %.2f\n", (float)totalWaitingTime / n);
    printf("Average Turn Around Time = %.2f\n", (float)totalTurnAroundTime / n);
}

void printProcessDetails(struct Process proc[], int n) {
    printf("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\n", proc[i].pid, proc[i].burstTime, proc[i].waitingTime, proc[i].turnAroundTime);
    }
}

int main() {
    int n;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process proc[n];
    for (int i = 0; i < n; i++) {
        proc[i].pid = i + 1;
        printf("Enter burst time for process P%d: ", proc[i].pid);
        scanf("%d", &proc[i].burstTime);
    }

    // Sort processes by burst time (SJF)
    sortProcessesByBurstTime(proc, n);

    // Calculate waiting time and turnaround time
    calculateWaitingTime(proc, n);
    calculateTurnAroundTime(proc, n);

    // Display process details
    printProcessDetails(proc, n);

    // Calculate and display average times
    calculateAverageTimes(proc, n);

    return 0;
}



SAMPLE OUTPUT
Enter the number of processes: 3
Enter burst time for process P1: 6
Enter burst time for process P2: 8
Enter burst time for process P3: 7

Process    Burst Time    Waiting Time    Turnaround Time
P1         6             0               6
P3         7             6              13
P2         8            13              21

Average Waiting Time = 6.33
Average Turn Around Time = 13.33
