#include <stdio.h>
#include <stdlib.h>

int main() {
    int row1, col1, row2, col2;
    int i, j, k;

    printf("Enter the number of rows and columns for the first matrix: ");
    scanf("%d %d", &row1, &col1);

    printf("Enter the number of rows and columns for the second matrix: ");
    scanf("%d %d", &row2, &col2);

    if (col1 != row2) {
        printf("Matrix multiplication not possible.\n");
        return -1;
    }

    int **matrix1 = (int **)malloc(row1 * sizeof(int *));
    int **matrix2 = (int **)malloc(row2 * sizeof(int *));
    int **result = (int **)malloc(row1 * sizeof(int *));

    for (i = 0; i < row1; i++) {
        matrix1[i] = (int *)malloc(col1 * sizeof(int));
        result[i] = (int *)malloc(col2 * sizeof(int));
    }

    for (i = 0; i < row2; i++) {
        matrix2[i] = (int *)malloc(col2 * sizeof(int));
    }

    printf("Enter elements of the first matrix:\n");
    for (i = 0; i < row1; i++) {
        for (j = 0; j < col1; j++) {
            scanf("%d", &matrix1[i][j]);
        }
    }

    printf("Enter elements of the second matrix:\n");
    for (i = 0; i < row2; i++) {
        for (j = 0; j < col2; j++) {
            scanf("%d", &matrix2[i][j]);
        }
    }

    for (i = 0; i < row1; i++) {
        for (j = 0; j < col2; j++) {
            result[i][j] = 0;
            for (k = 0; k < col1; k++) {
                result[i][j] += matrix1[i][k] * matrix2[k][j];
            }
        }
    }

    printf("Resultant matrix:\n");
    for (i = 0; i < row1; i++) {
        for (j = 0; j < col2; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }

    for (i = 0; i < row1; i++) {
        free(matrix1[i]);
        free(result[i]);
    }

    for (i = 0; i < row2; i++) {
        free(matrix2[i]);
    }

    free(matrix1);
    free(matrix2);
    free(result);

    return 0;
}



INPUT
Enter the number of rows and columns for the first matrix: 2 3
Enter the number of rows and columns for the second matrix: 3 2
Enter elements of the first matrix:
1 2 3
4 5 6
Enter elements of the second matrix:
7 8
9 10
11 12


OUTPUT
Resultant matrix:
58 64 
139 154
